# Development Dockerfile with hot reload capabilities
FROM rust:1.75-slim as development

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    git \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install cargo-watch for hot reload
RUN cargo install cargo-watch

# Create app directory
WORKDIR /app

# Copy dependency files
COPY Cargo.toml Cargo.lock ./

# Pre-build dependencies for faster subsequent builds
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build
RUN rm src/main.rs

# Create non-root user for development
RUN groupadd -r fubon && useradd -r -g fubon fubon \
    && chown -R fubon:fubon /app \
    && chown -R fubon:fubon /usr/local/cargo

USER fubon

# Expose ports for debugging
EXPOSE 3000 8080

# Default command for development
CMD ["cargo", "watch", "-x", "run"]

# Production stage (reuse from main Dockerfile)
FROM rust:1.75-slim as builder

RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

COPY Cargo.toml Cargo.lock ./
RUN mkdir src && echo "fn main() {}" > src/main.rs
RUN cargo build --release
RUN rm src/main.rs

COPY . .
RUN cargo build --release

FROM debian:bookworm-slim as production

RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

RUN groupadd -r fubon && useradd -r -g fubon fubon

WORKDIR /app

COPY --from=builder /app/target/release/r-fubon-neo /usr/local/bin/r-fubon-neo

RUN chown -R fubon:fubon /app

USER fubon

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD r-fubon-neo version || exit 1

ENTRYPOINT ["r-fubon-neo"]
CMD ["version"]